version: "3.7"

services:
  database:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: db_username
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: hades
      DATABASE_HOST: database
      HOSTNAME: database
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: SECRET_COOKIE
      RABBITMQ_DEFAULT_USER: ampq_username
      RABBITMQ_DEFAULT_PASS: ampq_password
      RABBITMQ_DEFAULT_VHOST: hades
      HOSTNAME: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ampq:/var/lib/rabbitmq
    restart: on-failure

  hades:
    container_name: hades
    build: .
    volumes:
      - .:/app
    environment:
      HOSTNAME: hades
      PORT: 5000
      TIMEZONE: UTC
      QUEUE: hades_queue
      # Postgresql connection
      DB_HOST: database
      DB_PORT: 5432
      DB_USERNAME: db_username
      DB_PASSWORD: db_password
      DB_NAME: hades
      DB_SSLMODE: disable
      # RabbitMQ
      AMPQ_HOST: rabbitmq
      AMPQ_PORT: 5672
      AMPQ_USERNAME: ampq_username
      AMPQ_PASSWORD: ampq_password
      AMPQ_VHOST: hades
    links:
      - database
      - rabbitmq
    depends_on:
      - database
      - rabbitmq
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - hades
    depends_on:
      - hades
    restart: always

volumes:
  database:
    driver: local
  ampq:
    driver: local
